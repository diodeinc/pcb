"""
Test board demonstrating use of custom modules and stdlib components.
Contains power supply filtering, LED indicators, and a simple oscillator circuit.
"""

load("@stdlib:v0.2.2/interfaces.zen", "Gpio", "Ground", "OscPair", "Power")

LedModule = Module("../modules/LedModule.zen")
Resistor = Module("@stdlib:v0.2.2/generics/Resistor.zen")
Capacitor = Module("@stdlib:v0.2.2/generics/Capacitor.zen")
Crystal = Module("@stdlib:v0.2.2/generics/Crystal.zen")

add_property("layout_path", "build/TestBoard")

# Power rails
vcc_3v3 = Power("VCC_3V3")
gnd = Ground("GND")

# Control signals
led_ctrl = Gpio("LED_CTRL")
osc_xi = Gpio("OSC_XI")
osc_xo = Gpio("OSC_XO")

# Power supply filtering capacitors
Capacitor(name = "C1", value = "100nF", package = "0402", voltage = "16V", dielectric = "X7R", P1 = vcc_3v3.NET, P2 = gnd.NET)
Capacitor(name = "C2", value = "10uF", package = "0805", voltage = "16V", dielectric = "X7R", P1 = vcc_3v3.NET, P2 = gnd.NET)

# Status LEDs using our custom module
LedModule(
    name = "LED_STATUS_GREEN",
    led_color = "green",
    r_value = "220Ohm",
    package = "0603",
    VCC = vcc_3v3,
    GND = gnd,
    CTRL = led_ctrl,
)

LedModule(
    name = "LED_STATUS_RED",
    led_color = "red",
    r_value = "330Ohm",
    package = "0603",
    VCC = vcc_3v3,
    GND = gnd,
    CTRL = Gpio(NET = gnd.NET),  # Always on indicator
)

# Crystal oscillator circuit
Crystal(
    name = "X1",
    frequency = "16MHz",
    load_capacitance = "18pF",
    package = "5032_2Pin",
    XIN = osc_xi.NET,
    XOUT = osc_xo.NET,
    GND = gnd.NET,
)

# Crystal load capacitors
Capacitor(name = "C3", value = "22pF", package = "0402", P1 = osc_xi.NET, P2 = gnd.NET)
Capacitor(name = "C4", value = "22pF", package = "0402", P1 = osc_xo.NET, P2 = gnd.NET)

# Pull-up resistor for LED control
Resistor(name = "R_PULLUP", value = "10kOhm", package = "0603", P1 = vcc_3v3.NET, P2 = led_ctrl.NET)
