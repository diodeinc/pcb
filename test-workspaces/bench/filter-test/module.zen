load("@stdlib/interfaces.zen", "Power", "Ground", "Analog")

Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
Inductor = Module("@stdlib/generics/Inductor.zen")

# Create a complex filter circuit with multiple paths
vcc = Power("3V3")
gnd = Ground("GND")
input_sig = Analog("INPUT")
output_sig = Analog("OUTPUT")

# Input stage: R1 -> C1 (AC coupling)
Resistor(name="R1", value="1kOhm", package="0603", P1=input_sig.NET, P2=Net("AC_COUPLED"))
Capacitor(name="C1", value="1uF", package="0603", P1=Net("AC_COUPLED"), P2=Net("STAGE1"))

# Filter stage: R2 -> L1 -> C2 (low-pass filter)
Resistor(name="R2", value="100Ohm", package="0603", P1=Net("STAGE1"), P2=Net("STAGE2"))
Inductor(name="L1", value="10uH", package="0805", P1=Net("STAGE2"), P2=Net("STAGE3"))
Capacitor(name="C2", value="100nF", package="0402", P1=Net("STAGE3"), P2=gnd.NET)

# Output stage: R3 -> C3 (DC blocking)
Resistor(name="R3", value="10kOhm", package="0603", P1=Net("STAGE3"), P2=Net("STAGE4"))
Capacitor(name="C3", value="10uF", package="0805", P1=Net("STAGE4"), P2=output_sig.NET)

# Power decoupling
Capacitor(name="C4", value="100nF", package="0402", P1=vcc.NET, P2=gnd.NET)

INPUT = io("INPUT", Analog, default=input_sig)
OUTPUT = io("OUTPUT", Analog, default=output_sig)
VCC = io("VCC", Power, default=vcc)
GND = io("GND", Ground, default=gnd)
