load("@stdlib/interfaces.zen", "Power", "Ground")

Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
Inductor = Module("@stdlib/generics/Inductor.zen")

# Create a long chain for comprehensive testing
vcc = Power("VCC")
gnd = Ground("GND")

# Chain: VCC -> R1(1k) -> C1(1uF) -> R2(10k) -> L1(10uH) -> C2(100nF) -> R3(100k) -> GND
Resistor(name="R1", value="1kOhm", package="0603", P1=vcc.NET, P2=Net("N1"))
Capacitor(name="C1", value="1uF", package="0603", P1=Net("N1"), P2=Net("N2"))
Resistor(name="R2", value="10kOhm", package="0603", P1=Net("N2"), P2=Net("N3"))
Inductor(name="L1", value="10uH", package="0805", P1=Net("N3"), P2=Net("N4"))
Capacitor(name="C2", value="100nF", package="0402", P1=Net("N4"), P2=Net("N5"))
Resistor(name="R3", value="100kOhm", package="0805", P1=Net("N5"), P2=gnd.NET)

VCC = io("VCC", Power, default=vcc)
GND = io("GND", Ground, default=gnd)
